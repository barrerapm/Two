Join-point y point-cuts

En esta parte deberemos poder deﬁnirle al framework los join-point y point-cuts. Un join-point es, en esencia,
una condicion sobre el metamodelo la cual se usa para determinar si un elemento es de interes para aplicarle este
aspecto o no. Por ejemplo, podra ser las clases de la jerarquia Persona o todos los accessors.

Las condiciones que debe permitir el framework son:
1. Aplicar expresiones regulares, tanto sobre el nombre de la clase como sobre los metodos.
2. Sobre clases especiﬁcas enumeradas de a una.
3. Sobre toda una jerarquia de clases.
4. Sobre metodos especiﬁcos enumerados de a uno.
5. Sobre los metodos que son accessors.
6. Sobre metodos que reciban un parametro cuyo nombre concuerde con uno provisto por el usuario del framework.
7. Condiciones sobre los tipos de los parametros (si son requeridos u opcionales). Por ejemplo, quisiera interceptar
   todos los metodos que tienen parametros opcionales para ver si realmente se usan.
8. Condiciones sobre la aridad de los metodos.
9. Otras condiciones personalizadas que pueda programar el usuario del framework.

Por otro lado, el framework debe poder permitir combinar cualquiera de estas condiciones mediante operaciones logicas:
Y, O y NOT. A un conjunto de condiciones se lo llaman point-cuts.

Por ejemplo, uno puede querer interceptar todos los metodos de la jerarquia Persona y que tengan algun parametro opcional.
Otro ejemplo puede ser tratar de todos los accesors de la jerarquia Persona o todos los metodos que reciban un parametro
que cumpla con la expresion regular ”persona”.
